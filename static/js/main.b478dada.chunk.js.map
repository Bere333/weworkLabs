{"version":3,"sources":["Components/Modal/Modal.js","Components/utils/Select.js","Components/Register/Register.js","Components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","modal","width","fontSize","display","flexDirection","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","TransitionsModal","classes","React","useState","open","setOpen","handleClose","className","onClick","Modal","aria-labelledby","aria-describedby","id","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Component","Register","props","e","preventDefault","localStorage","setItem","JSON","stringify","state","name","Date","firebase","collection","add","mail","dateHour","hour","date","discapacidad","then","docRef","console","log","setState","valid","catch","error","onChange","target","value","AddEmail","ChangeState","ChangeHour","ChangeDate","class","for","type","placeholder","this","required","Button","variant","Welcome","to","App","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b478dada.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport '../Modal/Modal.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    width: '100%',\r\n    fontSize: '15px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"btn-modal\"onClick={handleOpen}>\r\n        Aviso de Privacidad\r\n      </button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        id=\"style-modal\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Aviso de privacidad</h2>\r\n            <p id=\"transition-modal-description\">\r\n\r\nEl presente aviso de privacidad se establece en cumplimiento de lo dispuesto en la Ley Federal de Protección de Datos Personales en Posesión de los Particulares.\r\n\r\n“NOMBRE DE LA EMPRESA O PERSONA FISICA”, con domicilio en ” AQUI SE COLOCA EL DOMICILIO COMPLETO”, México, es responsable de recabar sus datos personales, del uso que se le dé a los mismos y de su protección. Su información personal será utilizada para proveer los servicios y productos que ha solicitado, informarle sobre cambios en los mismos y evaluar la calidad del servicio que le brindamos.\r\n\r\nPara las finalidades señaladas en el presente aviso de privacidad, podemos recabar sus datos personales de distintas formas: cuando usted nos los proporciona directamente; cuando visita nuestro sitio de Internet o utiliza nuestros servicios en línea, y cuando obtenemos información a través de otras fuentes que están permitidas por la ley. Recabamos sus datos personales de forma directa cuando usted mismo nos los proporciona por diversos medios, como cuando nos contacta o nos da información con objeto de que le prestemos un servicio. Los datos que obtenemos por este medio pueden ser, entre otros: Su nombre, correo electrónico (email), país y ciudad , páginas visitadas dentro de nuestro sitio, información para mejorar su experiencia en nuestro sitio como resolución de pantalla, explorador y tipo de sistema operativo utilizado. Usted tiene derecho de acceder, rectificar y cancelar sus datos personales, así como de oponerse al tratamiento de los mismos o revocar el consentimiento que para tal fin nos haya otorgado, a través de los procedimientos que hemos implementado.</p>\r\n<button className=\"ok\" onClick={handleClose}>Entendido</button>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\n\n\nclass Select extends Component {\n     handleClick = (e)=> {\n        e.preventDefault();\n        console.log('The link was clicked.');\n      }\n  \n    render() { \n        var style={\n            textAlign:'center'\n        } \n      return (\n        <select name=\"select\" style={this.props.style} onChange={this.props.Onclick}>\n               <option value=\"razón\" style={style} onClick={()=>{console.log('hola')}}>Razón de visita</option> \n               <option value=\"cita\"  style={style} onClick={()=>{console.log('hola')}}>Tengo una cita</option>\n               <option value=\"vendedor\"  style={style} onClick={this.handleClick}>Soy vendedor</option>\n\n        </select>\n      )}}\n\n\n export default Select;","\nimport React, { Component } from 'react';\nimport './Register.css';\n// import { input } from '@material-ui/core';\nimport TransitionsModal from '../Modal/Modal';\nimport { Button } from '@material-ui/core';\nimport * as firebase from 'firebase';\n\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          name:\"\",\n          mail:\"\",\n          hour:\"\", \n          date:\"\",\n          discapacidad:\"No\"\n          \n          \n        };\n      }\n      \n    onClick = (e) =>{\n    e.preventDefault();\n    localStorage.setItem(\"name\", JSON.stringify(this.state.name));\n    // localStorage.setItem(\"orden\", JSON.stringify(this.state.value));\n    // history.push(this.props.ruta);\n      \n      const currentDate = new Date();\n      const db = firebase.firestore();\n      \n      \n        db.collection('visitas').add({\n            name:this.state.name,\n            mail:this.state.mail,\n            dateHour: this.state.hour,\n            date: this.state.date,\n           \n            discapacidad:this.state.discapacidad\n        \n      })\n        .then((docRef) => {\n            console.log(\"Document written with ID: \", docRef.id);\n            this.setState({valid:true})\n            \n            \n        })\n        .catch((error) => {\n            console.error(\"Error adding document: \", error);\n        }\n        )    \n        \n    }  \n    onChange = e => {\n        this.setState({\n            name: e.target.value,\n            \n        });\n        \n       // localStorage.setItem(\"name\", JSON.stringify(this.state.name));\n        // localStorage.setItem(\"email\", JSON.stringify(this.state.email));\n\n      };\n\n    AddEmail = e => {\n      this.setState({\n        mail: e.target.value\n    });\n    }\n\n   // AddAnfitrion = e => {\n    //  this.setState({\n     //   anfitrion: e.target.value\n   // });\n  //  }\n    ChangeState = e => {\n      this.setState({\n        discapacidad:\"Si\"\n      })\n    }\n    ChangeHour = e =>{\n        this.setState({\n            hour:e.target.value\n        })\n    }\n    ChangeDate = e =>{\n        this.setState({\n            date:e.target.value\n        })\n    }\n\n    render(){\n       return (\n           <section className=\"section-register\">\n               <div className=\"register-tittle\">\n                  <label>¿Quién te visita?</label>\n               </div>\n               <div class=\"register-container\">\n                   <label for=\"\">Nombre Completo</label>\n                   <input type=\"text\" name=\"name\" placeholder=\"Nombre completo\"\n                   onChange={this.onChange}/>\n                   <label for=\"\">Dirección de correo</label>\n                   <input type=\"text\" name=\"name\"\n                   onChange={this.AddEmail}/>\n                   <label for=\"\">Input date</label>\n                   <input type=\"date\" required onChange={this.ChangeDate }/>\n                   <label for=\"\">Hora de la visita</label>\n                   <input type=\"time\"  onChange={this.ChangeHour}\n                   />\n               </div>\n               <div className=\"needs\">\n                 <input type='radio' className=\"chk\"\n                 onChange={this.ChangeState}/>\n                   <p class=\"txt-needs\">¿Tienes alguna discapacidad o requieres asistencia?</p>\n               </div>\n                   <div className=\"sig\">\n                     <Button variant=\"contained\" onClick={this.onClick}>Siguiente</Button>\n                   </div>\n\n\n           </section>\n\n\n\n       )\n\n    }\n\n    \n}\nexport default Register;\n","import React, { Component } from 'react';\nimport './Home.css';\nimport Button from '@material-ui/core/Button';\nimport TransitionsModal from '../Modal/Modal';\nimport Select from '../utils/Select'\nimport Register from '../Register/Register';\nimport { Link } from 'react-router-dom';\n\nclass Welcome extends Component {\n\n    render() {\n        return (\n            <section className=\"section-welcome\">\n                <div className=\"welcome-tittle\">\n                   <label>Wework Labs App</label>\n                   <select class=\"custom-select\">\n                       <option>Idioma</option>\n                       <option>Español</option>\n                       <option>English</option>\n                   </select>\n                </div>\n                <div className=\"welcome-btn\">\n                   <div className=\"btn-col1\">\n                   <Link to=\"/register\">\n                   <Button variant=\"contained\" onClick={Register}>Agendar visita</Button>\n                   </Link>\n                   </div>\n                </div>\n                <div className=\"privacity\">\n                     <TransitionsModal/>\n                   </div> \n            </section> \n        )}}\n        \n\n export default Welcome;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\n\n\n// import Home from './Components/Home/Home';\nimport Welcome from './Components/Home/Home'\n\n\nimport Register from './Components/Register/Register';\nimport * as firebase from 'firebase';\n\n\n\n\n\nfunction App() {\n  var firebaseConfig = {\n    apiKey: \"AIzaSyAn3GbL2dZH4z-J4YHX0jlwZXK8YRbu8Bs\",\n    authDomain: \"talent-fest-6406d.firebaseapp.com\",\n    databaseURL: \"https://talent-fest-6406d.firebaseio.com\",\n    projectId: \"talent-fest-6406d\",\n    storageBucket: \"talent-fest-6406d.appspot.com\",\n    messagingSenderId: \"626058194427\",\n    appId: \"1:626058194427:web:64bd471648b84936f22f5e\",\n    measurementId: \"G-YDZWYEP3P6\"\n  };\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconsole.log(firebaseConfig);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route exact path='/register' component={Register} />\n      <Route  path='/home' component={Welcome} />\n      {/* <Route path='/search' component={Search} /> */}\n\n\n    \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}